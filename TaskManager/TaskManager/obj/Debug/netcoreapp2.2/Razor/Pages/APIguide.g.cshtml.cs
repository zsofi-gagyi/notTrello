#pragma checksum "C:\Users\Zsofi\Desktop\TaskManager\TaskManager\Pages\APIguide.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6df44739ad719ee99d76ad1b066e4a7d0027a67c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_APIguide), @"mvc.1.0.razor-page", @"/Pages/APIguide.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/APIguide.cshtml", typeof(AspNetCore.Pages_APIguide), null)]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6df44739ad719ee99d76ad1b066e4a7d0027a67c", @"/Pages/APIguide.cshtml")]
    public class Pages_APIguide : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(7, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Zsofi\Desktop\TaskManager\TaskManager\Pages\APIguide.cshtml"
  if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_userLayout.cshtml";
    }
    else
    {
        Layout = "_publicLayout";
    }

#line default
#line hidden
            BeginContext(178, 3283, true);
            WriteLiteral(@"
<div class=""displayCardsContainer primaryContainer firstContainer"">
    <div class=""displayCard apiCard"">
        <div class=""mainTitle"">Our API services</div>
        <div class=""cardsInColumns"">
            <div class=""displayCardsContainer secondaryContainer"">
                <p>Accessible for everyone</p>
                <ul class=""apiList"">
                    <li>
                        By sending a <strong>GET</strong> request to <strong>""/api/users/me/userWithProjects""</strong>,
                        users can get a JSON object containing information regarding their account and their projects
                        (containing the cards in each project).
                    </li>
                    <li>
                        By sending a <strong>PUT</strong> request with a corresponding JSON object to <strong>
                            ""/api/users/me/projects/{Id}""
                        </strong>, where ""{Id}"" represents an Id of an existing project of theirs, users can mod");
            WriteLiteral(@"ify their projects.
                        The required format is the same as the one used by the userWithProjects endpoint.
                    </li>
                    <li>
                        By sending a <strong>DELETE</strong> request to <strong>""/api/users/me/projects/{Id}""</strong>, where ""{Id}""
                        represents an Id of an existing project of theirs, users can delete their solo projects (i.e. if they haven't
                        been collaborating on them with anyone else).
                    </li>
                </ul>
            </div>
            <div class=""displayCardsContainer secondaryContainer"">
                <p>Restricted to Admins</p>
                <ul class=""apiList"">
                    <li>
                        By sending a <strong>POST</strong> request with a JSON object (fields: ""name"" and ""password"") to
                        <strong>""/api/users""</strong>, Admins can create new accounts (in the role of ""User"").
                    </");
            WriteLiteral(@"li>
                    <li>
                        By sending a <strong>GET</strong> request to <strong>""/api/users/all""</strong>, Admins can get a
                        JSON object containing the name and Id of every user.
                    </li>
                    <li>
                        By sending a <strong>GET</strong> request to <strong>""/api/users/{Id}/userWithProjects""</strong>,
                        where ""{Id}"" represents the Id of any user, Admins can get a JSON object containing information
                        regarding that user and their projects (containing the cards in each project).
                    </li>
                    <li>
                        By sending a <strong>GET</strong> request to <strong>""/api/users/{Id}/userWithCards""</strong>,
                        where ""{Id}"" represents the Id of any user, Admins can get a JSON object containing information
                        regarding that user and their cards (containing the projects each card is");
            WriteLiteral(" part of).\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"title, apiTokenMessage\">To use these services, you will need an authentication token.</div>\r\n");
            EndContext();
#line 63 "C:\Users\Zsofi\Desktop\TaskManager\TaskManager\Pages\APIguide.cshtml"
         if (User.Identity.IsAuthenticated)
        {

#line default
#line hidden
            BeginContext(3517, 126, true);
            WriteLiteral("        <div class=\"largeButton\">\r\n            <a class=\"largeButton\" href=\"/users/token\">Get your token</a>\r\n        </div>\r\n");
            EndContext();
#line 68 "C:\Users\Zsofi\Desktop\TaskManager\TaskManager\Pages\APIguide.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(3679, 119, true);
            WriteLiteral("        <div class=\"largeButton\">\r\n            <a class=\"largeButton\" href=\"/signUp\">Sign up now!</a>\r\n        </div>\r\n");
            EndContext();
#line 74 "C:\Users\Zsofi\Desktop\TaskManager\TaskManager\Pages\APIguide.cshtml"
        }

#line default
#line hidden
            BeginContext(3809, 18, true);
            WriteLiteral("    </div>\r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_APIguide> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_APIguide> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_APIguide>)PageContext?.ViewData;
        public Pages_APIguide Model => ViewData.Model;
    }
}
#pragma warning restore 1591
